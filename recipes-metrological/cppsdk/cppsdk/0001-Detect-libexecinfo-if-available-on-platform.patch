From 1be47b8dbaa7ee9ccd297b674861793bd7f9231d Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Fri, 24 Mar 2017 18:31:49 -0700
Subject: [PATCH] Detect libexecinfo if available on platform

Some platform e.g. freebsd or musl based linux platforms
where backtrace() API is not available, there is external
library libexecinfo which provides same funcitonality
try to find this library if available add it to linker
cmdline

Signed-off-by: Khem Raj <raj.khem@gmail.com>
---
 CMakeLists.txt           |  2 ++
 cmake/FindExecInfo.cmake | 14 ++++++++++++++
 config.h.in              |  1 +
 generics/CMakeLists.txt  |  4 ++++
 generics/Portability.cpp |  5 ++++-
 generics/SocketPort.cpp  |  4 ++++
 6 files changed, 29 insertions(+), 1 deletion(-)
 create mode 100644 cmake/FindExecInfo.cmake
 create mode 100644 config.h.in

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 13a795c..79990dd 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,6 +12,7 @@ set (CPPSDK_PLATFORM "PC_UNIX" CACHE STRING "Defines on what platform cppsdk wil
 add_definitions(-DPLATFORM_${CPPSDK_PLATFORM}=1)
 
 include_directories (${CMAKE_SOURCE_DIR})
+include_directories (${CMAKE_BINARY_DIR})
 
 add_definitions (-Wall -fPIC)
 
@@ -28,6 +29,7 @@ else()
 endif()
 
 find_package(Threads REQUIRED)
+find_package(ExecInfo)
 
 option (CPPSDK_GENERICS
         "Include the generics library." ON) 
diff --git a/cmake/FindExecInfo.cmake b/cmake/FindExecInfo.cmake
new file mode 100644
index 0000000..b7fb396
--- /dev/null
+++ b/cmake/FindExecInfo.cmake
@@ -0,0 +1,14 @@
+include (CheckIncludeFiles)
+find_library (EXECINFO_LIBRARY NAMES execinfo)
+
+if (EXECINFO_LIBRARY)
+  set (CPPSDK_EXECINFO_LIBRARY ${EXEXINFO_LIBRARY})
+endif()
+
+CHECK_INCLUDE_FILE (execinfo.h HAVE_EXECINFO_H)
+
+configure_file(
+  "${CMAKE_SOURCE_DIR}/config.h.in"
+  "${CMAKE_BINARY_DIR}/config.h"
+   @ONLY)
+
diff --git a/config.h.in b/config.h.in
new file mode 100644
index 0000000..6de91b7
--- /dev/null
+++ b/config.h.in
@@ -0,0 +1 @@
+#cmakedefine HAVE_EXECINFO_H 1
diff --git a/generics/CMakeLists.txt b/generics/CMakeLists.txt
index a48eae6..b068367 100755
--- a/generics/CMakeLists.txt
+++ b/generics/CMakeLists.txt
@@ -14,6 +14,9 @@ set(GENERICS_LIBS
         ${CMAKE_DL_LIBS}
         ${GENERICS_RT_LIBRARY}
 )
+if (EXECINFO_LIBRARY)
+  list(APPEND GENERICS_LIBS ${EXECINFO_LIBRARY})
+endif ()
 
 set(GENERICS_SOURCES 
         SystemInfo.cpp
@@ -44,6 +47,7 @@ set(GENERICS_SOURCES
 	ProcessInfo.cpp
 )
 
+
 if(${CPPSDK_PLATFORM} STREQUAL "INTELCE")
    include_directories( ${INTELCE_OSAL_INCLUDE_DIRS} ${INTELCE_GDL_INCLUDE_DIRS})
    list(APPEND GENERICS_LIBS ${INTELCE_OSAL_LIBRARIES} ${INTELCE_GDL_LIBRARIES})
diff --git a/generics/Portability.cpp b/generics/Portability.cpp
index 9f10106..d9ed05b 100644
--- a/generics/Portability.cpp
+++ b/generics/Portability.cpp
@@ -1,12 +1,15 @@
 #include <stdlib.h>
 
+#include "config.h"
 #include "Portability.h"
 #include "SystemInfo.h"
 #include "Sync.h"
 
 #ifdef __LINUX__
 #include <signal.h>
-
+#ifdef HAVE_EXECINFO_H
+#include <execinfo.h>
+#endif
 #define CALLSTACK_SIG SIGUSR2
 #endif
 
diff --git a/generics/SocketPort.cpp b/generics/SocketPort.cpp
index 0295676..7aaff33 100644
--- a/generics/SocketPort.cpp
+++ b/generics/SocketPort.cpp
@@ -3,6 +3,7 @@
 #include "Sync.h"
 #include "Singleton.h"
 #include "Timer.h"
+#include "config.h"
 
 #ifdef __POSIX__
 #include <arpa/inet.h>
@@ -21,6 +22,9 @@
 #include <sys/ioctl.h>
 #include <sys/signalfd.h>
 #include <signal.h>
+#ifdef HAVE_EXECINFO_H
+#include <execinfo.h>
+#endif
 #endif
 
 #ifdef __WIN32__
-- 
2.12.1

